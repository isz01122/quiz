{"version":3,"sources":["components/Quiz.js","services/API.js","audios/correct.mp3","audios/incorrect.mp3","audios/start.mp3","audios/next.mp3","audios/close.mp3","pages/QuizPage.js","App.js","index.js"],"names":["Quiz","quizzes","onFinishPress","onNextPress","index","onOptionChange","selectedOption","isFinish","time","onRestartPress","onOnceMorePress","onWrongAnswerNotePress","isWrongAnswerMode","onWrongAnswerNoteTextChange","tempNote","closeQuiz","classes","useStyles","quiz","isLast","length","dataColor","_data","map","q","i","isCorrect","isOnceMore","push","data","labels","datasets","maxBarThickness","label","backgroundColor","hoverBackgroundColor","className","question","FormControl","component","formControl","RadioGroup","aria-label","name","value","onChange","options","option","FormControlLabel","control","Radio","checked","style","color","pointerEvents","correct_answer","TextField","id","marginRight","placeholder","fullWidth","InputLabelProps","shrink","variant","e","Button","onClick","FormHelperText","moment","utc","duration","format","filter","width","height","legend","display","scales","xAxes","ticks","fontSize","fontStyle","fontColor","yAxes","min","max","beginAtZero","stepSize","callback","maintainAspectRatio","makeStyles","theme","margin","spacing","marginLeft","button","a","axios","require","config","method","url","response","QuizPage","useState","setQuizzes","setIndex","isStart","setIsStart","setIsFinish","setCloseQuiz","setIsWrongAnswerMode","inCorrectedQuizIds","setInCorrectedQuizIds","setSelectedOption","setTempNote","startedAt","endedAt","setTime","useEffect","getData","then","brushUpQuizzes","catch","error","console","log","ids","results","decode","incorrect_answers","sort","Math","random","note","data-testid","includes","_endedAt","diff","Audio","closeAudio","play","nextAudio","correctAnswer","seletedAnswer","target","_quizzes","correctAudio","idx","incorrectAudio","handleOptionChange","_index","alert","handleWrongAnswerNoteTextChange","startAudio","disabled","CircularProgress","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c57619e.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormHelperText,\n  TextField\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst Quiz = ({\n  quizzes,\n  onFinishPress,\n  onNextPress,\n  index,\n  onOptionChange,\n  selectedOption,\n  isFinish,\n  time,\n  onRestartPress,\n  onOnceMorePress,\n  onWrongAnswerNotePress,\n  isWrongAnswerMode,\n  onWrongAnswerNoteTextChange,\n  tempNote,\n  closeQuiz\n}) => {\n  const classes = useStyles();\n  let quiz = quizzes[index];\n  let isLast = index === quizzes.length - 1 ? true : false;\n\n  let dataColor = [];\n  let _data = (quizzes || []).map((q, i) => {\n    if (q.isCorrect && !q.isOnceMore) {\n      dataColor.push(\"#66DE93\");\n      return 100;\n    } else if (q.isCorrect && q.isOnceMore) {\n      dataColor.push(\"#FF616D\");\n      return 50;\n    } else {\n      dataColor.push(\"\");\n      return 0;\n    }\n  });\n\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontSize: 20,\n            fontStyle: \"bold\",\n            fontColor: \"#000\"\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 100,\n            beginAtZero: true,\n            stepSize: 50,\n            fontSize: 20,\n            fontStyle: \"bold\",\n            fontColor: \"#000\",\n            callback: function (value) {\n              return `${value}%`;\n            }\n          }\n        }\n      ]\n    },\n    maintainAspectRatio: true\n  };\n\n  const data = {\n    labels: quizzes.map((q, i) => `${i + 1}번`),\n    datasets: [\n      {\n        maxBarThickness: 30,\n        label: \"정답률\",\n        backgroundColor: dataColor,\n        hoverBackgroundColor: \"#dadada\",\n        data: _data\n      }\n    ]\n  };\n\n  return !isWrongAnswerMode ? (\n    <div className=\"quiz-container\">\n      {!isFinish && (\n        <div className=\"quiz-form\">\n          <div>\n            <div className=\"text-title\">{`Q${index + 1}. ${\n              quiz.question\n            }`}</div>\n            <form>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <RadioGroup\n                  aria-label=\"quiz\"\n                  name=\"quiz\"\n                  value={selectedOption}\n                  onChange={onOptionChange}\n                >\n                  {quiz.options.map((option, index) => {\n                    return (\n                      <FormControlLabel\n                        className=\"h-50 font-size-md option\"\n                        key={index}\n                        value={option}\n                        control={<Radio style={{ color: \"black\" }} />}\n                        label={option}\n                        style={\n                          selectedOption\n                            ? selectedOption === option\n                              ? option === quiz.correct_answer\n                                ? {\n                                    backgroundColor: \"#66DE93\",\n                                    pointerEvents: \"none\"\n                                  }\n                                : {\n                                    backgroundColor: \"#FF616D\",\n                                    pointerEvents: \"none\"\n                                  }\n                              : { pointerEvents: \"none\" }\n                            : null\n                        }\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </FormControl>\n            </form>\n          </div>\n          {selectedOption && (\n            <div className=\"f-d j-sb\">\n              <FormHelperText className=\"text-helper\">\n                {quiz.isCorrect ? \"정답입니다!\" : \"오답입니다!\"}\n              </FormHelperText>\n              <div className=\"f-d\">\n                {!quiz.isCorrect && !quiz.isOnceMore && (\n                  <Button\n                    className=\"normal-btn mr-20\"\n                    variant=\"contained\"\n                    onClick={onOnceMorePress}\n                  >\n                    {\"한번 더!\"}\n                  </Button>\n                )}\n                <Button\n                  className=\"normal-btn\"\n                  variant=\"contained\"\n                  onClick={isLast ? onFinishPress : onNextPress}\n                >\n                  {isLast ? \"종료\" : \"다음\"}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      {isFinish && (\n        <div className=\"result-form\">\n          <div className=\"f-d j-sb\">\n            <div className=\"wd-30\">\n              <div className=\"text-title mb-30\">{\"<결과>\"}</div>\n              <div className=\"text-title mb-10\">{`소요 시간 : ${moment\n                .utc(time.duration)\n                .format(\"HH:mm:ss\")}`}</div>\n              <div className=\"text-title mb-10\">{`정답 개수 : ${\n                quizzes.filter(quiz => quiz.isCorrect).length\n              }개`}</div>\n              <div className=\"text-title\">{`오답 개수 : ${\n                quizzes.filter(quiz => !quiz.isCorrect).length\n              }개`}</div>\n            </div>\n            <div className=\"wd-70\">\n              <div className=\"text-title mb-30\">{\"<정 오답 비율>\"}</div>\n              <Bar data={data} width={300} height={100} options={options} />\n            </div>\n          </div>\n          <div className=\"f-d j-fe a-c\">\n            <Button\n              className=\"normal-btn mr-20\"\n              variant=\"contained\"\n              onClick={onWrongAnswerNotePress}\n            >\n              {\"오답노트\"}\n            </Button>\n            <Button\n              className=\"normal-btn\"\n              variant=\"contained\"\n              onClick={onRestartPress}\n            >\n              {\"다시풀기\"}\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  ) : (\n    <div className=\"quiz-container\">\n      {!closeQuiz && (\n        <div className=\"quiz-form\">\n          <div>\n            <div className=\"text-title\">{`Q${index + 1}. ${\n              quiz.question\n            }`}</div>\n            <form>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <RadioGroup\n                  aria-label=\"quiz\"\n                  name=\"quiz\"\n                  value={selectedOption}\n                  onChange={onOptionChange}\n                >\n                  {quiz.options.map((option, index) => {\n                    return (\n                      <FormControlLabel\n                        className=\"h-50 font-size-md option\"\n                        key={index}\n                        value={option}\n                        control={\n                          <Radio\n                            checked={\n                              option === quiz.selectedOption ? true : false\n                            }\n                            style={{ color: \"black\" }}\n                          />\n                        }\n                        label={option}\n                        style={\n                          option === quiz.selectedOption\n                            ? {\n                                backgroundColor: \"#FF616D\",\n                                pointerEvents: \"none\"\n                              }\n                            : option === quiz.correct_answer\n                            ? {\n                                backgroundColor: \"#66DE93\",\n                                pointerEvents: \"none\"\n                              }\n                            : { pointerEvents: \"none\" }\n                        }\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </FormControl>\n            </form>\n          </div>\n          <div className=\"f-d j-sb\">\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"오답노트\"\n              style={{ marginRight: 20 }}\n              className=\"text-field\"\n              placeholder=\"문제에 대한 내 생각을 간단하게 메모해 보세요.\"\n              fullWidth\n              InputLabelProps={{\n                shrink: true\n              }}\n              variant=\"outlined\"\n              value={tempNote}\n              onChange={e => onWrongAnswerNoteTextChange(e, quiz)}\n            />\n            <div className=\"f-d\">\n              <Button\n                className=\"normal-btn\"\n                variant=\"contained\"\n                onClick={isLast ? onFinishPress : onNextPress}\n              >\n                {isLast ? \"저장 후 종료\" : \"다음\"}\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n      {closeQuiz && (\n        <div className=\"result-form\">\n          <div className=\"f-d j-c a-c h-100\">\n            <div className=\"text-title\">{\"수고하셨습니다.\"}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n    marginLeft: 10,\n    width: \"100%\"\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0)\n  }\n}));\n","export async function getData() {\n  const axios = require(\"axios\");\n  const config = {\n    method: \"get\",\n    url: \"https://opentdb.com/api.php?amount=10&type=multiple\"\n  };\n  const response = await axios(config);\n  return response;\n}\n","export default __webpack_public_path__ + \"static/media/correct.8af2ca6b.mp3\";","export default __webpack_public_path__ + \"static/media/incorrect.05917cbe.mp3\";","export default __webpack_public_path__ + \"static/media/start.cb7b7190.mp3\";","export default __webpack_public_path__ + \"static/media/next.52ec641d.mp3\";","export default __webpack_public_path__ + \"static/media/close.5e1885f8.mp3\";","import React, { useEffect, useState } from \"react\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport decode from \"html-entities-decode\";\nimport moment from \"moment\";\n\nimport Quiz from \"../components/Quiz\";\nimport { getData } from \"../services/API\";\nimport correctAudio from \"../audios/correct.mp3\";\nimport incorrectAudio from \"../audios/incorrect.mp3\";\nimport startAudio from \"../audios/start.mp3\";\nimport nextAudio from \"../audios/next.mp3\";\nimport closeAudio from \"../audios/close.mp3\";\n\nconst QuizPage = () => {\n  const [quizzes, setQuizzes] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [isStart, setIsStart] = useState(false);\n  const [isFinish, setIsFinish] = useState(false);\n  const [closeQuiz, setCloseQuiz] = useState(false);\n  const [isWrongAnswerMode, setIsWrongAnswerMode] = useState(false);\n  const [inCorrectedQuizIds, setInCorrectedQuizIds] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [tempNote, setTempNote] = useState(\"\");\n  const [time, setTime] = useState({\n    startedAt: null,\n    endedAt: null,\n    duration: null\n  });\n\n  useEffect(() => {\n    getData()\n      .then(response => {\n        let quizzes = brushUpQuizzes(response);\n        setQuizzes(quizzes);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const brushUpQuizzes = response => {\n    let quizzes = response.data.results.map((quiz, index) => {\n      let _quiz = {\n        ...quiz,\n        id: index,\n        question: decode(quiz.question),\n        correct_answer: decode(quiz.correct_answer),\n        incorrect_answers: quiz.incorrect_answers.map(option => decode(option)),\n        options: [quiz.correct_answer, ...quiz.incorrect_answers]\n          .sort(() => Math.random() - 0.5)\n          .map(option => decode(option)),\n        isCorrect: false,\n        isOnceMore: false,\n        note: null,\n        selectedOption: null\n      };\n      return _quiz;\n    });\n    return quizzes;\n  };\n\n  const handleQuizStartPress = () => {\n    new Audio(startAudio).play();\n    setIsStart(true);\n    setTime({\n      ...time,\n      startedAt: moment()\n    });\n  };\n\n  const handleFinishPress = () => {\n    let _endedAt = moment();\n    setIndex(0);\n    setSelectedOption(\"\");\n    setIsFinish(true);\n    setTime({\n      ...time,\n      endedAt: _endedAt,\n      duration: _endedAt.diff(time.startedAt)\n    });\n    if (isWrongAnswerMode) {\n      new Audio(closeAudio).play();\n      setCloseQuiz(true);\n      setTempNote(\"\");\n    }\n  };\n\n  const handleOnceMorePress = () => {\n    new Audio(nextAudio).play();\n    setSelectedOption(\"\");\n    let _quizzes = quizzes.map((quiz, idx) => {\n      if (idx === index) {\n        quiz.isOnceMore = true;\n      }\n      return quiz;\n    });\n    setQuizzes(_quizzes);\n  };\n\n  const handleNextPress = () => {\n    new Audio(nextAudio).play();\n    setIndex(index + 1);\n    setSelectedOption(\"\");\n    if (isWrongAnswerMode) {\n      setTempNote(\"\");\n    }\n  };\n\n  const handleWrongAnswerNotePress = () => {\n    new Audio(nextAudio).play();\n    let _index = quizzes.filter(q => q.isCorrect === false).map(q => q.id);\n    if (_index.length > 0) {\n      setInCorrectedQuizIds(_index);\n      setIsWrongAnswerMode(true);\n    } else {\n      alert(\"오답이 없습니다.\");\n    }\n  };\n\n  const handleWrongAnswerNoteTextChange = (e, quiz) => {\n    let _quizzes = quizzes.map(q => {\n      if (q.id === quiz.id) {\n        q.note = e.target.value;\n      }\n      return q;\n    });\n    setTempNote(e.target.value);\n    setQuizzes(_quizzes);\n  };\n\n  const handleRestartPress = () => {\n    new Audio(nextAudio).play();\n    setIndex(0);\n    setSelectedOption(\"\");\n    setIsFinish(false);\n    setTime({\n      ...time,\n      startedAt: moment(),\n      endedAt: null,\n      duration: null\n    });\n\n    let _quizzes = quizzes.map(quiz => {\n      quiz.isCorrect = false;\n      quiz.isOnceMore = false;\n      return quiz;\n    });\n    setQuizzes(_quizzes);\n  };\n\n  const handleOptionChange = e => {\n    let correctAnswer = quizzes[index].correct_answer;\n    let seletedAnswer = e.target.value;\n    let _quizzes = [];\n    if (seletedAnswer === correctAnswer) {\n      new Audio(correctAudio).play();\n      _quizzes = quizzes.map((quiz, idx) => {\n        if (idx === index) {\n          quiz.isCorrect = true;\n          quiz.selectedOption = seletedAnswer;\n        }\n        return quiz;\n      });\n    } else {\n      new Audio(incorrectAudio).play();\n      _quizzes = quizzes.map((quiz, idx) => {\n        if (idx === index) {\n          quiz.isCorrect = false;\n          quiz.selectedOption = seletedAnswer;\n        }\n        return quiz;\n      });\n    }\n    setQuizzes(_quizzes);\n    setSelectedOption(seletedAnswer);\n  };\n\n  const buildUpQuizzes = ids => {\n    let _quizzes = quizzes.filter(q => ids.includes(q.id));\n    return _quizzes;\n  };\n\n  return (\n    <div className=\"main-container\" data-testid={\"quiz-1\"}>\n      {isStart && (\n        <Quiz\n          isWrongAnswerMode={isWrongAnswerMode}\n          quizzes={\n            isWrongAnswerMode ? buildUpQuizzes(inCorrectedQuizIds) : quizzes\n          }\n          onFinishPress={handleFinishPress}\n          onNextPress={handleNextPress}\n          index={index}\n          onOptionChange={e => handleOptionChange(e)}\n          selectedOption={selectedOption}\n          isFinish={isFinish}\n          time={time}\n          onRestartPress={handleRestartPress}\n          onOnceMorePress={handleOnceMorePress}\n          onWrongAnswerNotePress={handleWrongAnswerNotePress}\n          onWrongAnswerNoteTextChange={(e, quiz) =>\n            handleWrongAnswerNoteTextChange(e, quiz)\n          }\n          tempNote={tempNote}\n          closeQuiz={closeQuiz}\n        />\n      )}\n      {!isStart && (\n        <Button\n          className=\"quiz-start\"\n          variant=\"contained\"\n          onClick={handleQuizStartPress}\n          disabled={quizzes.length === 0}\n        >\n          {quizzes.length === 0 ? <CircularProgress /> : \"퀴즈 풀기\"}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default QuizPage;\n","import \"./App.css\";\nimport { QuizPage } from \"./pages\";\n\nfunction App() {\n  return <QuizPage />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}