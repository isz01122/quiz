{"version":3,"sources":["components/Quiz.js","audios/correct.mp3","audios/incorrect.mp3","audios/start.mp3","audios/next.mp3","audios/close.mp3","services/API.js","pages/QuizPage.js","App.js","index.js"],"names":["Quiz","quizzes","onFinishPress","onNextPress","index","onOptionChange","selectedOption","isFinish","time","onRestartPress","onOnceMorePress","isWrongAnswerMode","onWrongAnswerNotePress","onWrongAnswerNoteTextChange","classes","useStyles","quiz","isLast","length","chartData","map","isCorrect","isOnceMore","chartDataColor","value","data","labels","datasets","label","maxBarThickness","backgroundColor","className","data-testid","question","FormControl","component","formControl","RadioGroup","aria-label","name","onChange","options","option","FormControlLabel","control","Radio","checked","style","pointerEvents","correct_answer","TextField","id","placeholder","fullWidth","InputLabelProps","shrink","variant","note","e","Button","onClick","FormHelperText","Fragment","moment","utc","duration","format","filter","width","height","legend","display","scales","xAxes","ticks","fontSize","fontStyle","fontColor","yAxes","min","max","beginAtZero","stepSize","callback","tooltips","callbacks","tooltipItems","toFixed","maintainAspectRatio","makeStyles","theme","margin","spacing","marginLeft","button","instance","a","config","method","url","axios","response","QuizPage","useState","setQuizzes","setIndex","isStart","setIsStart","setIsFinish","setIsWrongAnswerMode","inCorrectedQuizIds","setInCorrectedQuizIds","setSelectedOption","startedAt","endedAt","setTime","useEffect","API","getQuizzes","then","brushUpQuizzes","catch","error","console","log","ids","results","decode","incorrect_answers","sort","Math","random","includes","_endedAt","Audio","closeAudio","play","diff","nextAudio","correctAnswer","seletedAnswer","target","_quizzes","correctAudio","idx","incorrectAudio","handleOptionChange","_incorrectedIds","alert","_quiz","handleWrongAnswerNoteTextChange","startAudio","disabled","CircularProgress","size","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.343c741b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormHelperText,\n  TextField\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst Quiz = ({\n  quizzes,\n  onFinishPress,\n  onNextPress,\n  index,\n  onOptionChange,\n  selectedOption,\n  isFinish,\n  time,\n  onRestartPress,\n  onOnceMorePress,\n  isWrongAnswerMode,\n  onWrongAnswerNotePress,\n  onWrongAnswerNoteTextChange\n}) => {\n  const classes = useStyles();\n  const quiz = quizzes[index];\n  const isLast = index === quizzes.length - 1 ? true : false;\n  const chartData = quizzes.map(quiz =>\n    quiz.isCorrect && !quiz.isOnceMore\n      ? 100\n      : quiz.isCorrect && quiz.isOnceMore\n      ? 50\n      : 0\n  );\n  const chartDataColor = chartData.map(value =>\n    value === 100 ? \"#66DE93\" : value === 50 ? \"#FF616D\" : \"\"\n  );\n\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontSize: 20,\n            fontStyle: \"bold\",\n            fontColor: \"#000\"\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 100,\n            beginAtZero: true,\n            stepSize: 50,\n            fontSize: 20,\n            fontStyle: \"bold\",\n            fontColor: \"#000\",\n            callback: function (value) {\n              return `${value}%`;\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItems, data) {\n          const value = data.datasets[0].data[tooltipItems.index].toFixed(0);\n          return `${value}%`;\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n  const data = {\n    labels: quizzes.map((quiz, index) => `${index + 1}번`),\n    datasets: [\n      {\n        label: \"정답률\",\n        maxBarThickness: 30,\n        backgroundColor: chartDataColor,\n        data: chartData\n      }\n    ]\n  };\n\n  return (\n    <div\n      className=\"quiz-container\"\n      data-testid={\n        !isWrongAnswerMode\n          ? \"quiz-component\"\n          : \"quiz-component-wrong-answer-mode\"\n      }\n    >\n      {!isFinish && (\n        <div className=\"quiz-form\">\n          <div>\n            <div className=\"text-title\">{`Q${index + 1}. ${\n              quiz.question\n            }`}</div>\n            <form>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <RadioGroup\n                  aria-label=\"quiz\"\n                  name=\"quiz\"\n                  value={selectedOption}\n                  onChange={onOptionChange}\n                >\n                  {quiz.options.map((option, index) => {\n                    return (\n                      <FormControlLabel\n                        className=\"h-50 option\"\n                        key={index}\n                        value={option}\n                        control={\n                          <Radio\n                            className=\"c-black\"\n                            checked={\n                              isWrongAnswerMode\n                                ? option === quiz.selectedOption\n                                  ? true\n                                  : false\n                                : option === selectedOption\n                                ? true\n                                : false\n                            }\n                          />\n                        }\n                        label={option}\n                        style={\n                          !isWrongAnswerMode\n                            ? selectedOption\n                              ? selectedOption === option\n                                ? option === quiz.correct_answer\n                                  ? {\n                                      backgroundColor: \"#66DE93\",\n                                      pointerEvents: \"none\"\n                                    }\n                                  : {\n                                      backgroundColor: \"#FF616D\",\n                                      pointerEvents: \"none\"\n                                    }\n                                : { pointerEvents: \"none\" }\n                              : null\n                            : option === quiz.selectedOption\n                            ? {\n                                backgroundColor: \"#FF616D\",\n                                pointerEvents: \"none\"\n                              }\n                            : option === quiz.correct_answer\n                            ? {\n                                backgroundColor: \"#66DE93\",\n                                pointerEvents: \"none\"\n                              }\n                            : { pointerEvents: \"none\" }\n                        }\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </FormControl>\n            </form>\n          </div>\n          {!isWrongAnswerMode ? (\n            selectedOption && (\n              <div className=\"f-d j-sb\">\n                <FormHelperText className=\"text-helper\">\n                  {quiz.isCorrect ? \"정답입니다!\" : \"오답입니다!\"}\n                </FormHelperText>\n                <div className=\"f-d\">\n                  {!quiz.isCorrect && !quiz.isOnceMore && (\n                    <Button\n                      className=\"normal-btn mr-20\"\n                      variant=\"contained\"\n                      onClick={onOnceMorePress}\n                    >\n                      {\"한번 더!\"}\n                    </Button>\n                  )}\n                  <Button\n                    className=\"normal-btn\"\n                    variant=\"contained\"\n                    onClick={isLast ? onFinishPress : onNextPress}\n                  >\n                    {isLast ? \"종료\" : \"다음\"}\n                  </Button>\n                </div>\n              </div>\n            )\n          ) : (\n            <div className=\"f-d j-sb\">\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"오답노트\"\n                className=\"text-field mr-20\"\n                placeholder=\"왜 틀렸는지 자신의 생각을 간단하게 메모해 보세요.\"\n                fullWidth\n                InputLabelProps={{\n                  shrink: true\n                }}\n                variant=\"outlined\"\n                value={quiz.note ? quiz.note : \"\"}\n                onChange={e => onWrongAnswerNoteTextChange(e, quiz)}\n              />\n              <div className=\"f-d\">\n                <Button\n                  className=\"normal-btn\"\n                  variant=\"contained\"\n                  onClick={isLast ? onFinishPress : onNextPress}\n                >\n                  {isLast ? \"저장 후 종료\" : \"다음\"}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      {isFinish && (\n        <div\n          className=\"result-form\"\n          data-testid={\n            !isWrongAnswerMode ? \"result-component\" : \"close-component\"\n          }\n        >\n          {!isWrongAnswerMode && (\n            <React.Fragment>\n              <div className=\"f-d j-sb\">\n                <div className=\"wd-30\">\n                  <div className=\"text-title mb-30\">{\"<결과>\"}</div>\n                  <div className=\"text-sub-title mb-10\">{`소요 시간 : ${moment\n                    .utc(time.duration)\n                    .format(\"HH:mm:ss\")}`}</div>\n                  <div className=\"text-sub-title mb-10\">{`정답 개수 : ${\n                    quizzes.filter(quiz => quiz.isCorrect).length\n                  }개`}</div>\n                  <div className=\"text-sub-title\">{`오답 개수 : ${\n                    quizzes.filter(quiz => !quiz.isCorrect).length\n                  }개`}</div>\n                </div>\n                <div className=\"wd-70\">\n                  <div className=\"text-title mb-30\">{\"<정 오답 비율>\"}</div>\n                  <div>\n                    <Bar\n                      data={data}\n                      width={200}\n                      height={250}\n                      options={options}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"f-d j-fe a-c\">\n                <Button\n                  className=\"normal-btn mr-20\"\n                  variant=\"contained\"\n                  onClick={onWrongAnswerNotePress}\n                >\n                  {\"오답노트\"}\n                </Button>\n                <Button\n                  className=\"normal-btn\"\n                  variant=\"contained\"\n                  onClick={onRestartPress}\n                >\n                  {\"다시풀기\"}\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {isWrongAnswerMode && (\n            <div className=\"f-d j-c a-c h-100\">\n              <div className=\"text-title\">{\"수고하셨습니다.\"}</div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n    marginLeft: 10,\n    width: \"100%\"\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0)\n  }\n}));\n","export default __webpack_public_path__ + \"static/media/correct.8af2ca6b.mp3\";","export default __webpack_public_path__ + \"static/media/incorrect.05917cbe.mp3\";","export default __webpack_public_path__ + \"static/media/start.cb7b7190.mp3\";","export default __webpack_public_path__ + \"static/media/next.52ec641d.mp3\";","export default __webpack_public_path__ + \"static/media/close.5e1885f8.mp3\";","import axios from \"axios\";\n\nclass API {\n  async getQuizzes() {\n    const config = {\n      method: \"get\",\n      url: \"https://opentdb.com/api.php?amount=10&type=multiple\"\n    };\n    const response = await axios(config);\n    return response;\n  }\n}\n\nconst instance = new API();\nexport default instance;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport decode from \"html-entities-decode\";\nimport moment from \"moment\";\n\nimport Quiz from \"../components/Quiz\";\nimport {\n  correctAudio,\n  incorrectAudio,\n  startAudio,\n  nextAudio,\n  closeAudio\n} from \"../audios\";\nimport API from \"../services/API\";\n\nconst QuizPage = () => {\n  const [quizzes, setQuizzes] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [isStart, setIsStart] = useState(false);\n  const [isFinish, setIsFinish] = useState(false);\n  const [isWrongAnswerMode, setIsWrongAnswerMode] = useState(false);\n  const [inCorrectedQuizIds, setInCorrectedQuizIds] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [time, setTime] = useState({\n    startedAt: null,\n    endedAt: null,\n    duration: null\n  });\n\n  useEffect(() => {\n    API.getQuizzes()\n      .then(response => {\n        const quizzes = brushUpQuizzes(response);\n        setQuizzes(quizzes);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const brushUpQuizzes = response => {\n    const quizzes = response.data.results.map((quiz, index) => {\n      const _quiz = {\n        ...quiz,\n        id: index,\n        question: decode(quiz.question),\n        correct_answer: decode(quiz.correct_answer),\n        incorrect_answers: quiz.incorrect_answers.map(option => decode(option)),\n        options: [quiz.correct_answer, ...quiz.incorrect_answers]\n          .sort(() => Math.random() - 0.5)\n          .map(option => decode(option)),\n        isCorrect: false,\n        isOnceMore: false,\n        note: null,\n        selectedOption: null\n      };\n      return _quiz;\n    });\n    return quizzes;\n  };\n\n  const handleQuizStartPress = () => {\n    new Audio(startAudio).play();\n    setIsStart(true);\n    setTime({\n      ...time,\n      startedAt: moment()\n    });\n  };\n\n  const handleFinishPress = () => {\n    const _endedAt = moment();\n    if (isWrongAnswerMode) {\n      new Audio(closeAudio).play();\n    }\n    setIndex(0);\n    setSelectedOption(\"\");\n    setIsFinish(true);\n    setTime({\n      ...time,\n      endedAt: _endedAt,\n      duration: _endedAt.diff(time.startedAt)\n    });\n  };\n\n  const handleOnceMorePress = () => {\n    new Audio(nextAudio).play();\n    const _quizzes = quizzes.map((quiz, idx) => {\n      if (idx === index) {\n        quiz.isOnceMore = true;\n      }\n      return quiz;\n    });\n    setSelectedOption(\"\");\n    setQuizzes(_quizzes);\n  };\n\n  const handleNextPress = () => {\n    new Audio(nextAudio).play();\n    setIndex(index + 1);\n    setSelectedOption(\"\");\n  };\n\n  const handleWrongAnswerNotePress = () => {\n    new Audio(nextAudio).play();\n    const _incorrectedIds = quizzes\n      .filter(quiz => quiz.isCorrect === false)\n      .map(quiz => quiz.id);\n    if (_incorrectedIds.length > 0) {\n      setInCorrectedQuizIds(_incorrectedIds);\n      setIsWrongAnswerMode(true);\n      setIsFinish(false);\n    } else {\n      alert(\"오답이 없습니다.\");\n    }\n  };\n\n  const handleWrongAnswerNoteTextChange = (e, _quiz) => {\n    const _quizzes = quizzes.map(quiz => {\n      if (quiz.id === _quiz.id) {\n        quiz.note = e.target.value;\n      }\n      return quiz;\n    });\n    setQuizzes(_quizzes);\n  };\n\n  const handleRestartPress = () => {\n    new Audio(nextAudio).play();\n    let _quizzes = quizzes.map(quiz => {\n      quiz.isCorrect = false;\n      quiz.isOnceMore = false;\n      return quiz;\n    });\n    setIndex(0);\n    setSelectedOption(\"\");\n    setIsFinish(false);\n    setTime({\n      ...time,\n      startedAt: moment(),\n      endedAt: null,\n      duration: null\n    });\n    setQuizzes(_quizzes);\n  };\n\n  const handleOptionChange = e => {\n    const correctAnswer = quizzes[index].correct_answer;\n    let seletedAnswer = e.target.value;\n    let _quizzes = [];\n    if (seletedAnswer === correctAnswer) {\n      new Audio(correctAudio).play();\n      _quizzes = quizzes.map((quiz, idx) => {\n        if (idx === index) {\n          quiz.isCorrect = true;\n          quiz.selectedOption = seletedAnswer;\n        }\n        return quiz;\n      });\n    } else {\n      new Audio(incorrectAudio).play();\n      _quizzes = quizzes.map((quiz, idx) => {\n        if (idx === index) {\n          quiz.isCorrect = false;\n          quiz.selectedOption = seletedAnswer;\n        }\n        return quiz;\n      });\n    }\n    setQuizzes(_quizzes);\n    setSelectedOption(seletedAnswer);\n  };\n\n  const buildQuizList = ids => {\n    const _quizzes = quizzes.filter(quiz => ids.includes(quiz.id));\n    return _quizzes;\n  };\n\n  return (\n    <div className=\"main-container\" data-testid={\"quiz-page\"}>\n      {isStart && (\n        <Quiz\n          quizzes={\n            isWrongAnswerMode ? buildQuizList(inCorrectedQuizIds) : quizzes\n          }\n          onFinishPress={handleFinishPress}\n          onNextPress={handleNextPress}\n          index={index}\n          onOptionChange={e => handleOptionChange(e)}\n          selectedOption={selectedOption}\n          isFinish={isFinish}\n          time={time}\n          onRestartPress={handleRestartPress}\n          onOnceMorePress={handleOnceMorePress}\n          isWrongAnswerMode={isWrongAnswerMode}\n          onWrongAnswerNotePress={handleWrongAnswerNotePress}\n          onWrongAnswerNoteTextChange={(e, quiz) =>\n            handleWrongAnswerNoteTextChange(e, quiz)\n          }\n        />\n      )}\n      {!isStart && (\n        <Button\n          className=\"quiz-start\"\n          variant=\"contained\"\n          onClick={handleQuizStartPress}\n          disabled={quizzes.length === 0}\n          data-testid={\"quiz-start-button\"}\n        >\n          {quizzes.length === 0 ? (\n            <CircularProgress className=\"loading-spinner\" size={50} />\n          ) : (\n            \"퀴즈 풀기\"\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default QuizPage;\n","import { QuizPage } from \"./pages\";\n\nfunction App() {\n  return <QuizPage />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}